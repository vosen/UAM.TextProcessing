<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:vanilla="clr-namespace:Vosen.Controls">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Vosen.Controls;component/themes/Classic/DropDownBoxItem.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
	<!-- Makes button enabling drop down menu transparent -->
	<Style x:Key="ComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">        
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<DockPanel Background="{TemplateBinding Background}" LastChildFill="false" SnapsToDevicePixels="true">
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<ControlTemplate x:Key="DropDownBoxTemplate" TargetType="{x:Type vanilla:DropDownBox}">
		<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
			<Grid>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
					<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
									<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
								</Canvas>
								<ItemsPresenter Grid.IsSharedSizeScope="True" x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
				<ContentPresenter ContentTemplate="{TemplateBinding ContentBoxTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
				<ToggleButton Cursor="Hand" ClickMode="Press" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Style="{StaticResource ComboBoxTransparentButtonStyle}" Width="Auto"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<DataTemplate x:Key="ContentTemplate">
		<TextBlock Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type vanilla:DropDownBox}}, Path=ContentBoxForeground}" Text="{Binding}"/>
	</DataTemplate>

	<ItemsPanelTemplate x:Key="ItemsPanelTemplate">
		<vanilla:GroupingStackPanel IsItemsHost="True"/>
	</ItemsPanelTemplate>

	<Style TargetType="{x:Type vanilla:DropDownBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
		<!-- For some reason separator style is not applied when resourced inside DropDownBoxItem Style -->        
		<Style.Resources>
			<Style TargetType="{x:Type Separator}" x:Key="{x:Type Separator}">
				<Setter Property="Foreground" Value="Red" />
				<Setter Property="MinHeight" Value="2"/>
				<Setter Property="MinWidth" Value="2"/>
				<Setter Property="Margin" Value="0,2,0,2"/>
				<Setter Property="Focusable" Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Separator}">
							<Line Stroke="{StaticResource {ComponentResourceKey {x:Type vanilla:DropDownBox}, NicerBorderBrush}}" StrokeThickness="1" Stretch="Fill" X2="1" SnapsToDevicePixels="True" VerticalAlignment="Center" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
		<Setter Property="ItemsPanel" Value="{StaticResource ItemsPanelTemplate}" />
		<Setter Property="Template" Value="{StaticResource DropDownBoxTemplate}" />        
		<Setter Property="ContentBoxTemplate" Value="{StaticResource ContentTemplate}"/>
		<Setter Property="ContentBoxForeground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>        
	</Style>

</ResourceDictionary>