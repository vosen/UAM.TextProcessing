<local:FilterWindow
    x:Class="SQLFilter.FilterView.Test.MainWindow"
    x:TypeArguments="local:FakeServer" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SQLFilter.FilterView.Test"
    xmlns:vanilla="clr-namespace:Vosen.Controls;assembly=Vosen.Controls"
    Title="MainWindow" Height="600" Width="800"
    TextOptions.TextFormattingMode="Display">

    <Window.Resources>

        <local:OSNameToIndexConverter x:Key="OSNameToIndexConverter" />

        <RoutedUICommand x:Key="AddNodeCommand" Text="Add another node" />
        <RoutedUICommand x:Key="AddGroupCommand" Text="Add another node group" />

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Bd"
                                CornerRadius="1"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource {ComponentResourceKey {x:Type vanilla:DropDownBox}, NicerBorderBrush}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource {ComponentResourceKey {x:Type vanilla:DropDownBox}, NicerBorderBrush}}" />
                </Trigger>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="BorderBrush" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ImageButton" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter Opacity="0.5" Content="{TemplateBinding Property=ContentControl.Content}" x:Name="button"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1.0" TargetName="button" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <vanilla:IsSeparator x:Key="IsContentSeparator" />
        <vanilla:DarkenLightenColor x:Key="darkenColor" />
        <vanilla:DebugConverter x:Key="debug" />
        <local:PlainStringExprConverter x:Key="StringExprConverter" />
        <local:StringExprTypePicker x:Key="StringExprTypePicker" />
        <local:NumericExprTypePicker x:Key="NumericExprTypePicker" />
        <local:MakeArray x:Key="MakeArray" />
        <local:BoolValuePicker x:Key="BoolValuePicker" />
        <local:EnumGenerator x:Key="EnumGenerator" />

        <Style x:Key="PlainTextBlock" TargetType="{x:Type TextBlock}" >
            <Setter Property="Margin" Value="1" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="PlainBoxItem" TargetType="{x:Type vanilla:DropDownBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}"/>

        <Style x:Key="LineSeparator" TargetType="{x:Type Separator}">
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="MinHeight" Value="2"/>
            <Setter Property="MinWidth" Value="2"/>
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Line Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Stretch="Fill" X2="1" SnapsToDevicePixels="True" VerticalAlignment="Center" UseLayoutRounding="True" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="True" />
        </Style>

        <local:GroupTypePicker x:Key="groupPicker"/>

        <HierarchicalDataTemplate x:Key="GroupTemplate" ItemsSource="{Binding Path=Children}">
            <StackPanel Orientation="Horizontal">
                <vanilla:DropDownBox 
                    SelectedIndex="{Binding Path=Type, Converter={StaticResource groupPicker}, NotifyOnSourceUpdated=True}"
                    SourceUpdated="NodeUpdated"
                    ContentBoxForeground="#0000ff">
                    <vanilla:DropDownBoxItem>
                        <vanilla:DropDownBoxItem.Icon>
                            <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/and.png"></Image>
                        </vanilla:DropDownBoxItem.Icon>
                        All
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        <vanilla:DropDownBoxItem.Icon>
                            <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/or.png"></Image>
                        </vanilla:DropDownBoxItem.Icon>
                        Any
                    </vanilla:DropDownBoxItem>
                    <Separator/>
                    <vanilla:DropDownBoxItem>
                        <vanilla:DropDownBoxItem.Icon>
                            <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/not-or.png"></Image>
                        </vanilla:DropDownBoxItem.Icon>
                        None
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        <vanilla:DropDownBoxItem.Icon>
                            <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/not-and.png"></Image>
                        </vanilla:DropDownBoxItem.Icon>
                        Some not
                    </vanilla:DropDownBoxItem>
                </vanilla:DropDownBox>
                <Button
                    Style="{StaticResource ImageButton}"
                    Command="{StaticResource AddNodeCommand}"
                    CommandParameter="{Binding}">                    
                    <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/add-node.png"/>
                </Button>
                <Button 
                    Margin="0"
                    Style="{StaticResource ImageButton}"
                    Command="{StaticResource AddGroupCommand}"
                    CommandParameter="{Binding}">
                    <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/add-group.png"/>
                </Button>
                <Button
                    Style="{StaticResource ImageButton}"
                    Command="Delete"
                    CommandParameter="{Binding}">
                    <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/cross.png"/>
                </Button>
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="NumericTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,1,0,1">
                <vanilla:DropDownBox
                    SelectedValue="{Binding Path=Children[0].Children[0].Text, NotifyOnSourceUpdated=True, Mode=TwoWay}"                   
                    SourceUpdated="PropertyBoxUpdated"
                    ContentBoxForeground="Green"
                    ItemsSource="{Binding Path=Properties, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=OneWay}"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                </vanilla:DropDownBox>
                <vanilla:DropDownBox
                    Margin="1,0,2,0"
                    SelectedIndex="{Binding Path=Children[0].Type, Converter={StaticResource NumericExprTypePicker}, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                    SourceUpdated="OperatorUpdated"
                    ContentBoxForeground="Red"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                    <vanilla:DropDownBoxItem>
                        equals
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        does not equal
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        is greater than
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        is greater or equal
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        is less than
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        is less or equal
                    </vanilla:DropDownBoxItem>
                </vanilla:DropDownBox>
                <TextBox
                    Text="{Binding Path=Children[0].Children[1].Text, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                    SourceUpdated="ValueUpdated"/>
                <Button 
                    Style="{StaticResource ImageButton}"
                    Command="Delete"
                    CommandParameter="{Binding}">
                    <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/cross.png"/>
                </Button>
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="StringTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,1,0,1">
                <vanilla:DropDownBox
                    SelectedValue="{Binding Path=Children[0].Children[0].Text, NotifyOnSourceUpdated=True, Mode=TwoWay}"                    
                    SourceUpdated="PropertyBoxUpdated"
                    ContentBoxForeground="Green"
                    ItemsSource="{Binding Path=Properties, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=OneWay}"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                </vanilla:DropDownBox>
                <vanilla:DropDownBox
                    Margin="1,0,2,0"
                    x:Name="DropBox"
                    SelectedIndex="{Binding Path=Children[0].Type, Converter={StaticResource StringExprTypePicker}, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                    SourceUpdated="StringOperatorUpdated"
                    ContentBoxForeground="Red"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                    <vanilla:DropDownBoxItem>
                        is
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        contains
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        begins with
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        ends with
                    </vanilla:DropDownBoxItem>
                    <Separator/>
                    <vanilla:DropDownBoxItem>
                        matches pattern
                    </vanilla:DropDownBoxItem>
                </vanilla:DropDownBox>
                <TextBox
                    x:Name="ValueBox"
                    Text="{Binding Path=Children[0].Children[1].Text, NotifyOnSourceUpdated=True, Converter={StaticResource StringExprConverter}, Mode=TwoWay}"
                    SourceUpdated="ValueUpdated"/>
                <Button
                    Style="{StaticResource ImageButton}"
                    Command="Delete"
                    CommandParameter="{Binding}">
                    <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/cross.png"/>
                </Button>
            </StackPanel>
            <HierarchicalDataTemplate.Triggers>
                <!-- HACK ALERT: this trigger is a dirty hack to change escape/unescape rules based on expr type -->
                <Trigger SourceName="DropBox" Property="vanilla:DropDownBox.SelectedIndex" Value="5" >
                    <Setter TargetName="ValueBox" Property="TextBox.Text" Value="{Binding Path=Children[0].Children[1].Text, NotifyOnSourceUpdated=True, Mode=TwoWay}"></Setter>
                </Trigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="IPTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,1,0,1">
                <vanilla:DropDownBox
                    SelectedValue="{Binding Path=Children[0].Children[0].Text, NotifyOnSourceUpdated=True, Mode=TwoWay}"                    
                    SourceUpdated="PropertyBoxUpdated"
                    ContentBoxForeground="Green"
                    ItemsSource="{Binding Path=Properties, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=OneWay}"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                </vanilla:DropDownBox>
                <vanilla:DropDownBox
                    Margin="1,0,2,0"
                    SelectedIndex="{Binding Path=Children[0].Type, Converter={StaticResource NumericExprTypePicker}, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                    SourceUpdated="OperatorUpdated"
                    ContentBoxForeground="Red"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                    <vanilla:DropDownBoxItem>
                        equals
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        does not equal
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        is greater than
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        is greater or equal
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        is less than
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        is less or equal
                    </vanilla:DropDownBoxItem>
                </vanilla:DropDownBox>
                <TextBox 
                    Text="{Binding Path=Children[0].Children[1].Text, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                    SourceUpdated="ValueUpdated"/>
                <Button 
                    Style="{StaticResource ImageButton}"
                    Command="Delete"                    
                    CommandParameter="{Binding}">
                    <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/cross.png"/>
                </Button>
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="BoolTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,1,0,1">
                <vanilla:DropDownBox
                    SelectedValue="{Binding Path=Children[0].Children[0].Text, NotifyOnSourceUpdated=True, Mode=TwoWay}"                    
                    SourceUpdated="PropertyBoxUpdated"
                    ContentBoxForeground="Green"
                    ItemsSource="{Binding Path=Properties, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=OneWay}"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                </vanilla:DropDownBox>
                <TextBlock Style="{StaticResource PlainTextBlock}" Foreground="Red">
                    is
                </TextBlock>
                <vanilla:DropDownBox SelectedIndex="{Binding Path=Children[0].Children[1].Type, Converter={StaticResource BoolValuePicker}, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                                     SourceUpdated="ValueUpdated"
                                     ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                    <vanilla:DropDownBoxItem>
                        True
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        False
                    </vanilla:DropDownBoxItem>
                </vanilla:DropDownBox >
                <Button 
                    Style="{StaticResource ImageButton}"
                    Command="Delete"
                    CommandParameter="{Binding}">
                    <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/cross.png"/>
                </Button>
            </StackPanel>

        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="EnumTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,1,0,1">
                <vanilla:DropDownBox
                    SelectedValue="{Binding Path=Children[0].Children[0].Text, NotifyOnSourceUpdated=True, Mode=TwoWay}"                    
                    SourceUpdated="PropertyBoxUpdated"
                    ContentBoxForeground="Green"
                    ItemsSource="{Binding Path=Properties, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=OneWay}"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                </vanilla:DropDownBox>
                <vanilla:DropDownBox
                    SelectedIndex="{Binding Path=Children[0].Type, Converter={StaticResource NumericExprTypePicker}, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                    SourceUpdated="OperatorUpdated"
                    ContentBoxForeground="Red"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}}">
                    <vanilla:DropDownBoxItem>
                        equals
                    </vanilla:DropDownBoxItem>
                    <vanilla:DropDownBoxItem>
                        does not equal
                    </vanilla:DropDownBoxItem>
                </vanilla:DropDownBox>
                <vanilla:DropDownBox
                    SelectedIndex="{Binding Path=Children[0].Children[1].Text, NotifyOnSourceUpdated=True, Mode=TwoWay, Converter={StaticResource OSNameToIndexConverter}}"
                    SourceUpdated="ValueUpdated"
                    ItemsSource="{Binding Path=Children[0].Children[0].Text, Converter={StaticResource EnumGenerator}}"
                    ItemContainerStyle="{Binding Source={StaticResource PlainBoxItem}, Mode=OneTime}">
                </vanilla:DropDownBox>
                <Button 
                    Style="{StaticResource ImageButton}"
                    Command="Delete"
                    CommandParameter="{Binding}">
                    <Image Width="16" Height="16" Source="/TextProcessing.Application;component/Images/cross.png"/>
                </Button>
            </StackPanel>
        </HierarchicalDataTemplate>

        <local:NodeTemplateSelector 
            x:Key="nodeSelector" 
            StringTemplate="{StaticResource StringTemplate}"  
            NumericTemplate="{StaticResource NumericTemplate}" 
            GroupTemplate="{StaticResource GroupTemplate}"
            IPTemplate="{StaticResource IPTemplate}"
            BoolTemplate="{StaticResource BoolTemplate}"
            EnumTemplate="{StaticResource EnumTemplate}" />

    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource AddNodeCommand}" Executed="AddNodeExecuted" />
        <CommandBinding Command="{StaticResource AddGroupCommand}" Executed="AddGroupExecuted" />
        <CommandBinding Command="Delete" Executed="DeleteExecuted" CanExecute="DeleteCanExecute" />
    </Window.CommandBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        
        <ListView Grid.Row="1" Grid.Column="0" x:Name="ServerList">
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Owner}" Header="Owner"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding City}" Header="City"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Address}" Header="IP Address"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding OS}" Header="OS"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Users}" Header="Users"></GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Active}" Header="Active"></GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <GridSplitter  HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="1" Width="5"/>

        <vanilla:TreeView  Grid.Row="1" Grid.Column="2" ItemsSource="{Binding Path=Tree, Converter= {StaticResource MakeArray}}"  Name="treeView" HidePlusMinus="true" ShowRootLines="False" >
            <vanilla:TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type vanilla:TreeViewItem}" BasedOn="{StaticResource {x:Type vanilla:TreeViewItem}}">
                    <Setter Property="HeaderTemplate" Value="{Binding Path=Type, Converter={StaticResource nodeSelector}}"/>
                    <Setter Property="Focusable" Value="False"/>
                </Style>
            </vanilla:TreeView.ItemContainerStyle>
        </vanilla:TreeView>

        <TextBox Grid.ColumnSpan="3" Grid.Row="0" Grid.Column="0" DockPanel.Dock="Bottom" Margin="1"  Text="{Binding Path=Query, Mode=TwoWay, ValidatesOnExceptions=True}"  Name="label" />
    </Grid>
</local:FilterWindow>